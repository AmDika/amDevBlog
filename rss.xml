<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Dev Blog]]></title><description><![CDATA[FE Dev | QA | Dreamer]]></description><link>https://amdika.github.io/amDevBlog/</link><generator>RSS for Node</generator><lastBuildDate>Sat, 25 Jan 2020 10:13:28 GMT</lastBuildDate><item><title><![CDATA[8 Aturan emas dalam desain UI]]></title><description><![CDATA[Pada dasarnya Prinsip 8 aturan emas tampilan tatap muka ini berasal dari penyempurnaan serta pengalaman pembuatan desain tatap muka yang…]]></description><link>https://amdika.github.io/amDevBlog//8-aturan-emas-desain-UI/</link><guid isPermaLink="false">https://amdika.github.io/amDevBlog//8-aturan-emas-desain-UI/</guid><pubDate>Tue, 10 Sep 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Pada dasarnya Prinsip 8 aturan emas tampilan tatap muka ini berasal dari penyempurnaan serta pengalaman pembuatan desain tatap muka yang membutuhkan validasi dan pengaturan yang spesifik pada domain desain. Dan ke-8 aturan emas ini yang dikemukakan oleh Schneiderman adalah sebagai berikut :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Konsistensi
Konsistensi dilakukan pada urutan tindakan, perintah, dan istilah yang digunakan pada prompt, menu, serta layar bantuan.&lt;/li&gt;
&lt;li&gt;Memungkinkan pengguna untuk menggunakan shortcut
Ada kebutuhan dari pengguna yang sudah ahli untuk meningkatkan kecepatan interaksi, sehingga diperlukan singkatan, tombol fungsi, perintah tersembunyi, dan fasilitas makro.&lt;/li&gt;
&lt;li&gt;Memberikan umpan balik yang informatif
Untuk setiap tindakan operator, sebaiknya disertakan suatu sistem umpan balik. Untuk tindakan yang sering dilakukan dan tidak terlalu penting, dapat diberikan umpan balik yang sederhana. Tetapi ketika tindakan merupakan hal yang penting, maka umpan balik sebaiknya lebih substansial. Misalnya muncul suatu suara ketika salah menekan tombol pada waktu input data atau muncul pesan kesalahannya.&lt;/li&gt;
&lt;li&gt;Merancang dialog untuk menghasilkan suatu penutupan
Urutan tindakan sebaiknya diorganisir dalam suatu kelompok dengan bagian awal, tengah, dan akhir. Umpan balik yang informatif akan meberikan indikasi bahwa cara yang dilakukan sudah benar dan dapat mempersiapkan kelompok tindakan berikutnya.&lt;/li&gt;
&lt;li&gt;Memberikan penanganan kesalahan yang sederhana
Sedapat mungkin sistem dirancang sehingga pengguna tidak dapat melakukan kesalahan fatal. Jika kesalahan terjadi, sistem dapat mendeteksi kesalahan dengan cepat dan memberikan mekanisme yang sedehana dan mudah dipahami untuk penanganan kesalahan.&lt;/li&gt;
&lt;li&gt;Mudah kembali ke tindakan sebelumnya
Hal ini dapat mengurangi kekuatiran pengguna karena pengguna mengetahui kesalahan yang dilakukan dapat dibatalkan; sehingga pengguna tidak takut untuk mengekplorasi pilihan-pilihan lain yang belum biasa digunakan.&lt;/li&gt;
&lt;li&gt;Mendukung tempat pengendali internal (internal locus of control)
Pengguna ingin menjadi pengontrol sistem dan sistem akan merespon tindakan yang dilakukan pengguna daripada pengguna merasa bahwa sistem mengontrol pengguna. Sebaiknya sistem dirancang sedemikan rupa sehingga pengguna menjadi inisiator daripada responden.&lt;/li&gt;
&lt;li&gt;Mengurangi beban ingatan jangka pendek
Keterbatasan ingatan manusia membutuhkan tampilan yang sederhana atau banyak tampilan halaman yang sebaiknya disatukan, serta diberikan cukup waktu pelatihan untuk kode, mnemonic, dan urutan tindakan.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sumber: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Shneiderman, B., 1998, Designing the User Interface – Strategies for Effective Human-Computer Interaction, Third Edition, Addison-Wesley, USA.]&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://iwanbinanto.com/2008/07/21/8-aturan-emas-desain-user-interface/&quot;&gt;Sumber 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Quality Assurance di IT]]></title><description><![CDATA[QA atau Quality assurance secara umum dalam dunia IT merupakan suatu tugas pengujian dalam proses membangun sebuah produk serta menjamin…]]></description><link>https://amdika.github.io/amDevBlog//Quality-Assurance-di-IT/</link><guid isPermaLink="false">https://amdika.github.io/amDevBlog//Quality-Assurance-di-IT/</guid><pubDate>Sun, 05 May 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;QA atau Quality assurance secara umum dalam dunia IT merupakan suatu tugas pengujian dalam proses membangun sebuah produk serta menjamin jalannya produk tersebut dapat menghasilkan sistem yang terjamin kualitasnya. Jadi pada dasarnya seorang Quality Assurance mempunyai tanggung jawab terkait dengan peran jaminan kualitas produk yang akan di hasikan. Untuk mengetahui lebih dalam tentang QA, adapun jenisnya yaitu QA Tester dan QA Engineer. Berikut penjelasannya:&lt;/p&gt;
&lt;h2&gt;Tentang QA Tester dan QA Engineer&lt;/h2&gt;
&lt;p&gt;QA tester memiliki tugas utama melakukan pengujian terhadap perangkat, membuat alur pengujian, serta membuat laporan hasil pengujian. Sedangkan, QA Engineer tidak jauh berbeda dengan QA Tester dalam hal kemampuan pengujiannya. Dalam melakukan proses testing seorang QA Engineer harus memiliki kriteria khusus tersendiri. kemampuannya tersebut diantaranya:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mindset pengujian
Harus memiliki pola pikir yang luas mengenai penggunaan suatu sistem dimana pengetesan sistem tersebut dapat terjamin kualitasnya.&lt;/li&gt;
&lt;li&gt;Analisa &amp;#x26; pengujian fungsional
Dapat mampu menganalisa kebutuhan fungsional sistem yang akan dibangun dan memastikan sistem yang sudah dibuat mampu memenuhi kebutuhan yang telah ditentukan.- Perbaikan proses &lt;/li&gt;
&lt;li&gt;Pengujian keamanan
QA Engineer mampu melakukan pengujian keamanan secara detail sehingga memiliki jaminan keamanan yang tinggi. Contoh pengujian pada proses login dapat dilakukan dengan melakukan pengujian apakah password yang dimasukkan memiliki batas minimal karakter, pengaruh antara kombinasi huruf besar dan kecil pada password, dll.&lt;/li&gt;
&lt;li&gt;pengujian performa
mampu melakukan pengujian terhadap performa dari sistem. Beberapa contoh pengujian yang dapat dilakukan untuk menguji performa sistem dapat dilakukan dengan melakukan pengujian sistem terhadap respon tertentu apakah sistem akan menerima respon dengan cepat atau tidak. Dengan adanya pengujian performa, maka diharapkan QA Engineer dapat memastikan bahwa sistem yang dihasilkan memiliki performa serta kualitas yang sesuai.&lt;/li&gt;
&lt;li&gt;User Acceptance Testing (UAT)
Seorang QA Engineer harus mampu menghasilkan dokumen yang dijadikan bukti bahwa sistem yang telah dibuat sudah dapat diterima oleh pengguna apabila hasil pengujian tersebut sudah bisa dianggap memenuhi kebutuhan pengguna. Dari hasil dokumentasi tersebut, maka dapat diambil kesimpulan apakah sistem yang telah diuji dapat diterima atau tidak.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sumber:
&lt;a href=&quot;http://jobsinfopedia.blogspot.com/2015/12/pengertian-tugas-tanggung-jawab-quality.html&quot;&gt;artikel 1&lt;/a&gt;
&lt;a href=&quot;https://medium.com/skyshidigital/quality-assrurance-dalam-dunia-it-999ee722c736&quot;&gt;artikel 2&lt;/a&gt;
&lt;a href=&quot;https://medium.com/@makersinstitute/mengenal-lebih-jauh-tentang-software-quality-assurance-844361cd50db&quot;&gt;artikel 3&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mengenal Frontend Framework]]></title><description><![CDATA[Frontend Framework dalam konteks ini adalah merupakan suatu kerangka kerja untuk aplikasi web agar dalam pengembangannya dapat terstruktur…]]></description><link>https://amdika.github.io/amDevBlog//mengenal-frontend-framework/</link><guid isPermaLink="false">https://amdika.github.io/amDevBlog//mengenal-frontend-framework/</guid><pubDate>Thu, 25 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Frontend Framework dalam konteks ini adalah merupakan suatu kerangka kerja untuk aplikasi web agar dalam pengembangannya dapat terstruktur dan terskalabilitas.&lt;/p&gt;
&lt;p&gt;Untuk mengenal lebih jauh tentang beberapa macam Frontend Framework yang sudah populer dalam penggunaannya berikut penjelasannya:&lt;/p&gt;
&lt;h2&gt;react JS&lt;/h2&gt;
&lt;p&gt;react js merupakan framework yang dikembangkan oleh facebook. Menspesifikasikan framework tersebut untuk membuat UI yang terkesan interaktif namun juga fleksibel dalam pengembangannya
Framework tersebut mengusung component-based dalam penggunaannya. Dimana mengkomposisikan setiap component atau membagi-bagi setiap bagian terkecil dari suatu layout UI menjadi bagian komponen terkecil. Hal ini memudahkan skema suatu UI dapat menjadi lebih detail dan terorganisir.&lt;/p&gt;
&lt;h2&gt;vue JS&lt;/h2&gt;
&lt;p&gt;vue js dibuat oleh evan you, salah satu ex-googler. Framework ini mampu membuat suatu aplikasi UI yang cukup cepat karena didukung oleh berbagai macam tools dan libraries lainnya. Vue js saat ini menjadi salah satu framework yang tingkat popularitasnya tertinggi dengan jumlah stars terbanyak di repository github selain reactjs.&lt;/p&gt;
&lt;h2&gt;angular js&lt;/h2&gt;
&lt;p&gt;angular js merupakan framework yang langsung dikembangkan oleh google. Saat ini angular sudah mencapai versi 7. Dalam aspek skalabilitasnya, angular merupakan salah satu framework javascript yang paling terpopuler karena dibuat dengan menggunakan bahasa transpiler dari javascript yaitu typescript.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bahas tentang CDN (Content Delivery Network)]]></title><description><![CDATA[Apa itu CDN CDN(Content Delivery Network) merupakan jaringan simpul server geografis yang tersebar luas di seluruh dunia. CDN mampu…]]></description><link>https://amdika.github.io/amDevBlog//bahas-tentang-cdn/</link><guid isPermaLink="false">https://amdika.github.io/amDevBlog//bahas-tentang-cdn/</guid><pubDate>Sat, 26 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Apa itu CDN&lt;/h2&gt;
&lt;p&gt;CDN(Content Delivery Network) merupakan jaringan simpul server geografis yang tersebar luas di seluruh dunia. CDN mampu menyediakan alternatif sumber media yang contohnya kebanyakan adalah seperti statik konten gambar dan berkas JS atau beberapa struktural komponen.&lt;/p&gt;
&lt;p&gt;Dikarenakan rata-rata para pengguna dalam membuka halaman situs kebanyakan konten media digital, maka dari itu dibutuhkanlah suatu jejaringan khusus untuk membangun blok-blok media tersebut kedalam simpul terkecil dan dapat didistribusikan ke seluruh dunia. &lt;/p&gt;
&lt;p&gt;Prosesnya ketika media data digital tersebut dibutuhkan, maka simpul server terdekat ke pengguna akan mengirim statik konten dan memastikan data yang dibutuhkan tidak mengurangi latensi, dengan demikian akan mampu mendapati akses ke halaman situs tersebut lebih cepat.&lt;/p&gt;
&lt;h2&gt;Kapan CDN dibutuhkan&lt;/h2&gt;
&lt;p&gt;Alasan utama mengapa CDN itu dibutuhkan adalah untuk menambah pengalaman pengguna dalam konteks kecapatan membuka halaman sebuah situs. &lt;/p&gt;
&lt;p&gt;Sebuah website memungkinkan ber-hosting di beberapa wilayah negara, akan tetapi kebanyakan akses pengguna berasal dari negara-negara yang berbeda. Sebagai contoh, apabila website anda berhosting di utara Amerika, GTMetrix akan memberikan laporan kepada anda tingkat performa akses website anda berdasarkan lokasi dimana anda berada.&lt;/p&gt;
&lt;p&gt;Untuk para pengguna CDN global dari wilayah eropa memungkinkan untuk dapat mengunduh statik konten mereka dari sumber terdekat. Semisal, apabila pengguna ingin mendapatkan konten digital dari wilayah London, UK,  agar dapat mendapatkan konten yang sama maka tidak perlu sampai mengakses simpul server dari wilayah seberang samudera Atlantis. &lt;/p&gt;
&lt;p&gt;CDN tidak hanya memastikan pengalaman kecepatan untuk si pengguna. Akan tetapi juga mencegah situs tidak crash ketika terjadi lonjakan pengunjung. CDN juga membantu mendistribusikan bandwidth ke beberapa server. Sebagai ganti dari memperbolehkan 1 server untuk menangani banyak trafik.&lt;/p&gt;
&lt;p&gt;Namun CDN tidak selamannya dibutuhkan, dikarenakan CDN merupakan teknologi yang sudah teroptimasi. Kebanyakan CDN itu berbayar atau merupakan layanan pihak ketiga, dan cara mengimplementasikannya itu tergantung dari bagaimana tujuan situs anda, prioritas dan biaya anda.&lt;/p&gt;
&lt;h2&gt;CDN Untuk Konten Gambar&lt;/h2&gt;
&lt;p&gt;Untuk memaksimalkan kecepatan dari sebuah gambar yang disajikan kustomer atau pengguna layanan web adalah merupakan tantangan bisnis dari kebanyakan pengunjung web toko e-commerce. Pada kebanyakan contoh kasus, situs butuh waktu lama untuk melakukan proses pengunduhan gambar. Ini terjadi karena berbagai macam hal termasuk bagaimana perbedaan dalam mengelola media manajemen citra atau reguler CDN&lt;/p&gt;
&lt;h2&gt;Implementasi dan Biaya&lt;/h2&gt;
&lt;p&gt;Ini terkadang dalam pengimplementasikan suatu CDN akan terdengar menyulitkan(tergantung bagaimana sebuah situs dan tingkat kompleksitas-nya). Tetapi untuk website semacam berita atau profil sebuah perusahaan akan mudah dalam pengaplikasiannya. Secara esensi, anda perlu men-set CDN bagian file mana yang dibutuhkan. Setelah itu anda perlu mengkonfigurasi situs anda agar dapat megirim berbagai macam file yang akan ditangani.&lt;/p&gt;
&lt;p&gt;Untuk para pengguna yang pernah menggunakan CMS(wordpress, Drupal, Magento, dll) ada terdapat plugin yang tersedia namun dalam mengkonfigurasikannya terbilang sulit. Dalam tingkat implementasinya mungkin memerlukan perubahan DNS records dan juga perubahan nama server domain anda.&lt;/p&gt;
&lt;h2&gt;Biaya untuk CDN&lt;/h2&gt;
&lt;p&gt;Kebanyakan umumnya CDN adalah layanan pihak ketiga yang berbayar. Layanan tersebut dapat bergantung dari sebuah bandwidth, wilayah dan sekuritas ssl yang diperlukan. Sebagai contoh, apabila pengunjung website anda itu kebanyakan dari benua Amerika atau Eropa, maka anda cukup membeli server CDN yang lokasinya berada di benua Asia. Dan yang anda perlu ketahui adalah harga dari sebuah CDN itu beragam, dan tergantung bagaimana biaya yang anda keluarkan untuk website khususnya pada aset media digital anda.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gtmetrix.com/why-use-a-cdn.html&quot;&gt;source 1&lt;/a&gt;
&lt;a href=&quot;https://www.scientiamobile.com/what-is-an-image-cdn/&quot;&gt;source 2&lt;/a&gt;
&lt;a href=&quot;https://www.cincopa.com/blog/what-is-image-cdn-and-why-should-you-care/&quot;&gt;source 3&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Welcome to the Blog!]]></title><description><![CDATA[
Welcome to my new blog, I hope you enjoy your stay!

]]></description><link>https://amdika.github.io/amDevBlog//welcome-to-the-blog/</link><guid isPermaLink="false">https://amdika.github.io/amDevBlog//welcome-to-the-blog/</guid><pubDate>Sun, 09 Dec 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Welcome to my new blog, I hope you enjoy your stay!&lt;/p&gt;
&lt;!-- end --&gt;
&lt;h2&gt;Let me introduce myself.&lt;/h2&gt;
&lt;p&gt;So basically I’m just Front End Developer who has the ability to transform from PSD to HTML. Here is some my latest experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learning how to become web design in great news media company.&lt;/li&gt;
&lt;li&gt;Web designing for Sound of Music Jakarta concert.&lt;/li&gt;
&lt;li&gt;Developing CMS for Marketing Communication Agency.&lt;/li&gt;
&lt;li&gt;Becoming one of a great tech team member in startup company.&lt;/li&gt;
&lt;li&gt;Now, continuing my dev life in Canadian Company.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From now, I’ll try to write some documentation for my progress learning. Also, will write some of my journey exploring Indonesia’s nature.
Soon, a new page for special gallery photos. Btw, Sometimes I’ll write in indo style.
Hope you enjoy my story.&lt;/p&gt;
&lt;!-- 
### Pellentesque consectetur facilisis venenatis

Nam ullamcorper, orci nec tempor hendrerit, lorem nunc laoreet diam, vel gravida sem mi quis augue. Nunc odio velit, facilisis quis dictum non, facilisis quis felis. Vivamus [elementum dapibus nibh](https://google.com), eget aliquet nunc luctus maximus. Sed finibus risus eget ultrices maximus. Aliquam commodo consectetur diam eget tristique. Nunc quis erat quis felis fringilla tempus. Cras tempor nibh dolor, ac lacinia lacus ultrices eu.

&gt; Quisque tempor nulla turpis, ut placerat arcu lobortis nec. Aenean sed vehicula nisi. Nullam vitae placerat enim. Etiam hendrerit enim vel tempor fermentum. Morbi rutrum euismod ipsum a luctus.

Morbi et libero id metus tempor imperdiet eget non mi. Mauris pulvinar quis enim at placerat. Vestibulum vitae dapibus lectus, ut elementum est.

### Pellentesque facilisis venenatis mi, sit amet molestie nisl ornare et

Morbi posuere facilisis eros vel euismod. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Etiam malesuada dapibus dolor non cursus. Sed in turpis justo. Cras sed hendrerit nulla. Sed ornare, leo et suscipit tincidunt, justo diam sollicitudin risus, vitae vulputate nulla augue et lacus.

1.  Morbi posuere facilisis
2.  Pellentesque habitant morbi tristique
3.  Etiam malesuada dapibus

Ut vel ligula ante. Proin quis metus magna. Nulla nec dui vulputate, semper orci in, sagittis dolor. Mauris dictum neque non fermentum consectetur. Integer vel pellentesque ex, ut tincidunt quam.

#### Sed ac orci a dolor venenatis vulputate


![Space](./space.jpg)

Pellentesque consectetur facilisis venenatis. Nam ullamcorper, orci nec tempor hendrerit, lorem nunc laoreet diam, vel gravida sem mi quis augue. Nunc odio velit, facilisis quis dictum non, facilisis quis felis. Vivamus elementum dapibus nibh, eget aliquet nunc luctus maximus. Sed finibus risus eget ultrices maximus. Aliquam commodo consectetur diam eget tristique. Nunc quis erat quis felis fringilla tempus. Cras tempor nibh dolor, ac lacinia lacus ultrices eu.
##### Nulla nec dui vulputate, semper orci in, sagittis dolor

Mauris dictum neque non fermentum consectetur. Integer vel pellentesque ex, ut tincidunt quam. Sed ac orci a dolor venenatis vulputate. Sed sollicitudin, turpis ac malesuada dapibus, magna dui semper orci, in congue justo felis quis ante. Phasellus consequat et dolor fringilla accumsan. Pellentesque ullamcorper porttitor dolor et imperdiet.

```javascript
$(document).ready(function() {
    console.log(&apos;More jQuery, wow!&apos;)
})
```

###### ras aliquet ipsum ut enim pellentesque, id varius quam placerat

Maecenas non scelerisque leo. Sed id purus fringilla, consequat magna non, faucibus neque. Cras ornare nisi a lectus ultricies convallis. Integer tristique dictum eros, et elementum ante consectetur eget. Phasellus sollicitudin est vestibulum suscipit pellentesque. Duis in eros cursus magna laoreet aliquam vel a lectus. Nulla ut nisi vitae ipsum sollicitudin vestibulum. Aenean sit amet mattis odio. Vestibulum ultrices sed ipsum nec pretium. Integer non turpis nunc. Praesent tincidunt tincidunt alique

Integer mollis dolor non libero placerat, ut efficitur nisi ultricies. Etiam ac lacinia urna, eget ornare nunc. Suspendisse eget eros id turpis gravida semper. Duis ornare lorem et est pellentesque, quis rhoncus leo vestibulum. Nullam eu nulla ut elit rutrum iaculis. Cras a laoreet elit, in aliquet erat. Sed interdum varius posuere. Pellentesque eget luctus erat. Nam quis sem in ligula efficitur bibendum. --&gt;</content:encoded></item></channel></rss>